#include "utils.h"


void EnvironmentSetup(pid_t& pid , pid_t& sid)
{
    pid = fork();

    if(pid < 0)
    {
        /* Log any failure */
        exit(EXIT_FAILURE);
    }
    else if(pid > 0)
    {
        std::cout << "current daemon pid is: " << pid << std::endl;
        /* Log whatever you want! */
        exit(EXIT_SUCCESS);
    }

    //By setting the umask to 0, we will have full access to the files generated by the daemon.
    //Even if you aren't planning on using any files, it is a good idea to set the umask here anyway,
    // just in case you will be accessing files on the filesystem.
    umask(0);

    /* Open any logs here - using Boost.Log */

    /* Create a new SID for the child process */
    sid = setsid();
    if (sid < 0) {
        /* Log any failure */
        exit(EXIT_FAILURE);
    }


    /* Change the current working directory */
    if ((chdir("/")) < 0) {
        /* Log any failure here */
        exit(EXIT_FAILURE);
    }


    /* Close out the standard file descriptors */
    close(STDIN_FILENO);
    close(STDOUT_FILENO);
    close(STDERR_FILENO);
}


Account::Account()
{
    Balance = 100; // default value of deposited account.
}

Account::Account(__uint64_t balance)
{
    Balance = balance;
}

__uint64_t Account::get_balance()
{
    return Balance;
}


Wallet::Wallet():default_account()
{
    Accounts.push_back(default_account);

}

void Wallet::add_account(Account& adding_account)
{
    Account *temp = &adding_account;
    Accounts.push_back(temp);
}

